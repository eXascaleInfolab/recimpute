# RecImpute - A Recommendation System of Imputation Techniques for Missing Values in Time Series,
# eXascale Infolab, University of Fribourg, Switzerland

# imputebenchlabeler_config.yaml
# @author: @chacungu

# ImputeBenchLabeler related configuration file
# ------------------------------------

# LBL_PROPERTIES: All properties that labels can have (e.g. labels can be of type mono or multi)
LBL_PROPERTIES:
  # type: Specifies if the labels are mono or multi labels. Value can be one of: monolabels, regression, multilabels
  - type: monolabels
  # multi_labels_nb_rel: Top N algorithms to consider relevant in a multi-labels vector
  - multi_labels_nb_rel: 3 
  # reduction_threshold: For a label, if the percentage of clusters with this label is lower than this threshold,
  # the label is removed and the clusters are re-labeled with "valid" labels
  - reduction_threshold: .00

ALGORITHMS_LIST:
  - cdrec
  - dynammo
  - grouse
  - rosl
  - softimp
  - svdimp
  - svt
  - stmvl
  - spirit
  - tenmf
  - tkcm
  #- trmf # not working on Ubuntu 20.04

  #- ssa
  #- m-rnn
  #- brits

# Benchmark config: ------------------------------------------------------------------------

# TS_SELECTION_FOR_BCHMK: Strategy to select which time series are fed to the benchmark to label a sequence from one cluster. Can be 
# one of DATASET, CLUSTER, RDM_FROM_DATASET.
TS_SELECTION_FOR_BCHMK: 'RDM_FROM_DATASET'

# NB_TS_FOR_BCHMK: Number of time series to sample (and fed to the benchmark) from the data set of a cluster we want to label. This
# parameter is only used if TS_SELECTION_FOR_BCHMK == 'RDM_FROM_DATASET'. 
NB_TS_FOR_BCHMK: 10

# BENCHMARK_SCENARIO: scenario to use when running the ImputeBench benchmark. As of now, only miss_perc can be used.
BENCHMARK_SCENARIO: miss_perc

# BENCHMARK_ERRORS: list of errors to measure when running the ImputeBench benchmark. Can be any of mae, mse, rmse.
BENCHMARK_ERRORS:
  - mae
  - mse
  - rmse

# BENCHMARK_ERROR_TO_MINIMIZE: error to minimize when labeling the time series (algo with lowest error is used as label)
BENCHMARK_ERROR_TO_MINIMIZE: rmse

# BENCH_RES_AGG_AND_RANK_STRATEGY: aggregation and ranking strategy to use to get from the ImputeBench benchmark results to a list
# of algorithms (ordered from best to worse). Value can be one of: simple, voting.
BENCH_RES_AGG_AND_RANK_STRATEGY: voting

# BENCH_RES_AGG_AND_RANK_STRATEGY_PARAMS: Dictionary of parameters for each BENCH_RES_AGG_AND_RANK_STRATEGY.
BENCH_RES_AGG_AND_RANK_STRATEGY_PARAMS: 
  - simple:
      - index_to_agg: [0,1,2,3,4,5,6,7] # for miss_perc, indices are: 0:10%, 1:20%, 2:30%, 3:40%, 4:50%, 5:60%, 6:70%, 7:80%
      - agg_strat: mean # can be one of: mean, median, sum, min, max
  - voting:
      # list as much rankings you wish for, a majority voting strategy will be applied to the ensemble of resulting lists
      - ranking1: 
        - index_to_agg: [0] # for miss_perc, indices are: 0:10%, 1:20%, 2:30%, 3:40%, 4:50%, 5:60%, 6:70%, 7:80%
        - agg_strat: mean # can be one of: mean, median, sum, min, max
      - ranking2: 
        - index_to_agg: [0,1,2,3] # for miss_perc, indices are: 0:10%, 1:20%, 2:30%, 3:40%, 4:50%, 5:60%, 6:70%, 7:80%
        - agg_strat: mean # can be one of: mean, median, sum, min, max
      - ranking3: 
        - index_to_agg: [0,1,2,3,4,5] # for miss_perc, indices are: 0:10%, 1:20%, 2:30%, 3:40%, 4:50%, 5:60%, 6:70%, 7:80%
        - agg_strat: mean # can be one of: mean, median, sum, min, max
      - ranking4: 
        - index_to_agg: [0,1,2,3,4,5,6,7] # for miss_perc, indices are: 0:10%, 1:20%, 2:30%, 3:40%, 4:50%, 5:60%, 6:70%, 7:80%
        - agg_strat: mean # can be one of: mean, median, sum, min, max


# BENCHMARK_PATH: path to the Debug folder of the ImputeBench benchmark
BENCHMARK_PATH: /home/guillaume/bench-vldb20/TestingFramework/bin/Debug